<?php
/**
 * @file
 * dennis_requirements.install
 */

/**
 * Implements hook_requirements().
 */
function dennis_requirements_requirements($phase) {
  // Requirements based on CHANGELOG.txt.
  $requirements = array();
  // Ensure translations don't break during installation.
  $t = get_t();

  if ($phase == 'runtime') {
    // Get a list of modules.
    $modules_enabled = system_list('module_enabled');

    // Get contents of site.make.
    $site_make = '';
    if (file_exists((conf_path() . '/site.make'))) {
      $site_make = file_get_contents(conf_path() . '/site.make');
    }

    // Get contents of Gruntfile.js.
    $gruntfile = '';
    if (file_exists((conf_path() . '/Gruntfile.js'))) {
      $gruntfile = file_get_contents(conf_path() . '/Gruntfile.js');
    }

    // Distro 1.30.x
    if ($modules_enabled['dennis_core']->schema_version >= 7162) {

      // Case 22799: Addthis is replaced by Sharerich.
      if (isset($modules_enabled['addthis'])) {
        $requirements['dennis_social'] = array(
          'title' => $t('Dennis Social'),
          'value' => $t('Addthis module needs to be disabled. Sharerich should be used instead.'),
          'severity' => REQUIREMENT_ERROR,
        );
      }

      // Case 22925: Google Adwords Remarketing is added to Distro and should be removed form site.make.
      if (stripos($site_make, '[google_adwords_remarketing]') !== FALSE ||
        stripos($site_make, '[google_remarketing_tag]') !== FALSE
      ) {
        $requirements['google_adwords_remarketing'] = array(
          'title' => $t('Google Remarketing Tag'),
          'value' => $t('This module is on distro and should be removed from site.make.'),
          'severity' => REQUIREMENT_ERROR,
        );
      }

      // Case 23050: DFP was updated on Distro and should be removed form site.make.
      if (stripos($site_make, '[dfp]') !== FALSE) {
        $requirements['dfp'] = array(
          'title' => $t('DFP'),
          'value' => $t('This module is on distro and should be removed from site.make.'),
          'severity' => REQUIREMENT_ERROR,
        );
      }

      // Case 23055: Cache busting on requirejs bundles.
      if (stripos($gruntfile, "grunt.loadNpmTasks('grunt-hashres')") === FALSE) {
        $requirements['hashres'] = array(
          'title' => $t('Gruntfile.js'),
          'value' => $t('To benefit from automatic cache busting on requirejs bundles, any Gruntfile optimising RequireJS files need to have a hashres task.'),
          'severity' => REQUIREMENT_ERROR,
        );
      }


    }
  }

  return $requirements;
}
